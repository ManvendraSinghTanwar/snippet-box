{"version":3,"sources":["components/Navigation/Navbar.tsx","store/SnippetsContext.tsx","components/UI/Layout.tsx","components/UI/Badge.tsx","components/UI/Card.tsx","components/UI/PageHeader.tsx","components/UI/Button.tsx","components/UI/EmptyState.tsx","utils/dateParser.ts","utils/badgeColor.ts","utils/findLanguage.ts","utils/searchParser.ts","components/Snippets/SnippetPin.tsx","components/Snippets/SnippetCard.tsx","components/Snippets/SnippetGrid.tsx","components/SearchBar.tsx","containers/Home.tsx","components/Snippets/SnippetCode.tsx","components/Snippets/SnippetDetails.tsx","components/Snippets/SnippetDocs.tsx","containers/Snippet.tsx","containers/Snippets.tsx","components/AI/AutoTagger.tsx","components/AI/AIExplainer.tsx","components/Snippets/SnippetForm.tsx","containers/Editor.tsx","App.tsx","index.tsx"],"names":["Navbar","routes","clientRoutes","_jsx","className","children","map","_ref","idx","name","dest","NavLink","exact","to","SnippetsContext","createContext","snippets","searchResults","currentSnippet","tagCount","getSnippets","getSnippetById","id","setSnippet","createSnippet","snippet","updateSnippet","isLocal","deleteSnippet","toggleSnippetPin","countTags","searchSnippets","query","SnippetsContextProvider","props","setSnippets","useState","setSearchResults","setCurrentSnippet","setTagCount","history","useHistory","redirectOnError","push","axios","get","concat","then","res","data","catch","err","find","s","put","oldSnippetIdx","findIndex","slice","pathname","state","from","context","post","window","confirm","delete","deletedSnippetIdx","_objectSpread","isPinned","console","log","Provider","value","Layout","Badge","text","color","Card","title","classes","bodyClasses","parentClasses","childClasses","_jsxs","PageHeader","prevDest","prevState","Link","Button","outline","small","handler","type","elClasses","join","onClick","EmptyState","editorLink","dateParser","date","dayjs","extend","relativeTime","customParseFormat","dateFormat","test","toString","parsedDate","formatted","format","relative","fromNow","badgeColor","language","toLowerCase","charCodeAt","searchParser","rawQuery","tags","extractFilters","languages","replaceAll","trim","filter","filters","regex","RegExp","matcher","match","split","SnippetPin","useContext","Icon","path","mdiPin","size","mdiPinOutline","SnippetCard","description","code","createdAt","location","copyHandler","copy","SnippetGrid","SearchBar","inputRef","useRef","document","createElement","useEffect","current","focus","placeholder","ref","onKeyUp","e","key","inputHandler","href","target","rel","Home","length","Fragment","some","SnippetCode","syntax","search","aliases","alias","findLanguage","hljs","highlightAll","style","whiteSpace","borderRadius","SnippetDetails","updatedAt","creationDate","updateDate","tag","rowGap","protocol","host","rawUrl","SnippetDocs","ReactMarkdown","markdown","Snippet","useParams","useLocation","docs","Snippets","setFilter","localSnippets","setLocalSnippets","isActiveFilter","filteredSnippets","includes","filterHandler","count","clearFilterHandler","AutoTagger","currentTags","onTagsGenerated","loading","setLoading","suggestedTags","setSuggestedTags","error","setError","async","response","success","newTags","_err$response","_err$response$data","addAllTags","updatedTags","index","t","addTag","cursor","AIExplainer","aiExplanation","explanation","setExplanation","SnippetForm","inEdit","formData","setFormData","useAI","setUseAI","onSubmit","preventDefault","submissionData","formHandler","checked","onChange","htmlFor","required","stringToTags","rows","Editor","setInEdit","App","BrowserRouter","Switch","Route","component","ReactDOM","render","React","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1e79b931.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport { Route } from '../../typescript/interfaces';\nimport { routes as clientRoutes } from './routes.json';\n\nexport const Navbar = (): JSX.Element => {\n  const routes = clientRoutes as Route[];\n\n  return (\n    <nav className='navbar navbar-dark bg-dark navbar-expand'>\n      <div className='container-fluid'>\n        <ul className='navbar-nav'>\n          {routes.map(({ name, dest }, idx) => (\n            <li className='nav-item' key={idx}>\n              <NavLink exact to={dest} className='nav-link'>\n                {name}\n              </NavLink>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </nav>\n  );\n};\n","import { useState, createContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport {\n  Context,\n  Snippet,\n  Response,\n  TagCount,\n  NewSnippet,\n  SearchQuery\n} from '../typescript/interfaces';\n\nexport const SnippetsContext = createContext<Context>({\n  snippets: [],\n  searchResults: [],\n  currentSnippet: null,\n  tagCount: [],\n  getSnippets: () => {},\n  getSnippetById: (id: number) => {},\n  setSnippet: (id: number) => {},\n  createSnippet: (snippet: NewSnippet) => {},\n  updateSnippet: (snippet: NewSnippet, id: number, isLocal?: boolean) => {},\n  deleteSnippet: (id: number) => {},\n  toggleSnippetPin: (id: number) => {},\n  countTags: () => {},\n  searchSnippets: (query: SearchQuery) => {}\n});\n\ninterface Props {\n  children: JSX.Element | JSX.Element[];\n}\n\nexport const SnippetsContextProvider = (props: Props): JSX.Element => {\n  const [snippets, setSnippets] = useState<Snippet[]>([]);\n  const [searchResults, setSearchResults] = useState<Snippet[]>([]);\n  const [currentSnippet, setCurrentSnippet] = useState<Snippet | null>(null);\n  const [tagCount, setTagCount] = useState<TagCount[]>([]);\n\n  const history = useHistory();\n\n  const redirectOnError = () => {\n    history.push('/');\n  };\n\n  const getSnippets = (): void => {\n    axios\n      .get<Response<Snippet[]>>('/api/snippets')\n      .then(res => setSnippets(res.data.data))\n      .catch(err => redirectOnError());\n  };\n\n  const getSnippetById = (id: number): void => {\n    axios\n      .get<Response<Snippet>>(`/api/snippets/${id}`)\n      .then(res => setCurrentSnippet(res.data.data))\n      .catch(err => redirectOnError());\n  };\n\n  const setSnippet = (id: number): void => {\n    if (id < 0) {\n      setCurrentSnippet(null);\n      return;\n    }\n\n    getSnippetById(id);\n\n    const snippet = snippets.find(s => s.id === id);\n\n    if (snippet) {\n      setCurrentSnippet(snippet);\n    }\n  };\n\n  const createSnippet = (snippet: NewSnippet): void => {\n    axios\n      .post<Response<Snippet>>('/api/snippets', snippet)\n      .then(res => {\n        setSnippets([...snippets, res.data.data]);\n        setCurrentSnippet(res.data.data);\n        history.push({\n          pathname: `/snippet/${res.data.data.id}`,\n          state: { from: '/snippets' }\n        });\n      })\n      .catch(err => redirectOnError());\n  };\n\n  const updateSnippet = (\n    snippet: NewSnippet,\n    id: number,\n    isLocal?: boolean\n  ): void => {\n    axios\n      .put<Response<Snippet>>(`/api/snippets/${id}`, snippet)\n      .then(res => {\n        const oldSnippetIdx = snippets.findIndex(s => s.id === id);\n        setSnippets([\n          ...snippets.slice(0, oldSnippetIdx),\n          res.data.data,\n          ...snippets.slice(oldSnippetIdx + 1)\n        ]);\n        setCurrentSnippet(res.data.data);\n\n        if (!isLocal) {\n          history.push({\n            pathname: `/snippet/${res.data.data.id}`,\n            state: { from: '/snippets' }\n          });\n        }\n      })\n      .catch(err => redirectOnError());\n  };\n\n  const deleteSnippet = (id: number): void => {\n    if (window.confirm('Are you sure you want to delete this snippet?')) {\n      axios\n        .delete<Response<{}>>(`/api/snippets/${id}`)\n        .then(res => {\n          const deletedSnippetIdx = snippets.findIndex(s => s.id === id);\n          setSnippets([\n            ...snippets.slice(0, deletedSnippetIdx),\n            ...snippets.slice(deletedSnippetIdx + 1)\n          ]);\n          setSnippet(-1);\n          history.push('/snippets');\n        })\n        .catch(err => redirectOnError());\n    }\n  };\n\n  const toggleSnippetPin = (id: number): void => {\n    const snippet = snippets.find(s => s.id === id);\n\n    if (snippet) {\n      updateSnippet({ ...snippet, isPinned: !snippet.isPinned }, id, true);\n    }\n  };\n\n  const countTags = (): void => {\n    axios\n      .get<Response<TagCount[]>>('/api/snippets/statistics/count')\n      .then(res => setTagCount(res.data.data))\n      .catch(err => redirectOnError());\n  };\n\n  const searchSnippets = (query: SearchQuery): void => {\n    axios\n      .post<Response<Snippet[]>>('/api/snippets/search', query)\n      .then(res => {\n        setSearchResults(res.data.data);\n        console.log(res.data.data);\n      })\n      .catch(err => console.log(err));\n  };\n\n  const context = {\n    snippets,\n    searchResults,\n    currentSnippet,\n    tagCount,\n    getSnippets,\n    getSnippetById,\n    setSnippet,\n    createSnippet,\n    updateSnippet,\n    deleteSnippet,\n    toggleSnippetPin,\n    countTags,\n    searchSnippets\n  };\n\n  return (\n    <SnippetsContext.Provider value={context}>\n      {props.children}\n    </SnippetsContext.Provider>\n  );\n};\n","interface Props {\n  children: JSX.Element | JSX.Element[];\n}\n\nexport const Layout = (props: Props): JSX.Element => {\n  return (\n    <div className='container-lg'>\n      <div className='row py-4'>{props.children}</div>\n    </div>\n  );\n};\n","import { Color } from '../../typescript/types';\n\ninterface Props {\n  text: string;\n  color: Color;\n}\n\nexport const Badge = (props: Props): JSX.Element => {\n  const { text, color } = props;\n\n  return <span className={`badge bg-${color}`}>{text}</span>;\n};\n","import { ReactNode } from 'react';\n\ninterface Props {\n  title?: string;\n  children?: ReactNode;\n  classes?: string;\n  bodyClasses?: string;\n}\n\nexport const Card = (props: Props): JSX.Element => {\n  const { title, children, classes = '', bodyClasses = '' } = props;\n\n  const parentClasses = `card mb-3 ${classes}`;\n  const childClasses = `card-body ${bodyClasses}`;\n\n  return (\n    <div className={parentClasses}>\n      <div className={childClasses}>\n        <h5 className='card-title'>{title}</h5>\n        {children}\n      </div>\n    </div>\n  );\n};\n","import { Link } from 'react-router-dom';\n\ninterface Props<T> {\n  title: string;\n  prevDest?: string;\n  prevState?: T;\n}\n\nexport const PageHeader = <T,>(props: Props<T>): JSX.Element => {\n  const { title, prevDest, prevState } = props;\n\n  return (\n    <div className='col-12'>\n      <h4>{title}</h4>\n      {prevDest && (\n        <h6>\n          <Link\n            to={{\n              pathname: prevDest,\n              state: prevState\n            }}\n            className='text-decoration-none text-light'\n          >\n            &lt;- Go back\n          </Link>\n        </h6>\n      )}\n    </div>\n  );\n};\n","import { Color } from '../../typescript/types';\n\ninterface Props {\n  text: string;\n  color: Color;\n  outline?: boolean;\n  small?: boolean;\n  handler?: () => void;\n  classes?: string;\n  type?: 'button' | 'submit' | 'reset';\n}\n\nexport const Button = (props: Props): JSX.Element => {\n  const {\n    text,\n    color,\n    outline = false,\n    small = false,\n    handler,\n    classes = '',\n    type = 'button'\n  } = props;\n\n  const elClasses = [\n    'btn',\n    outline ? `btn-outline-${color}` : `btn-${color}`,\n    small && 'btn-sm',\n    classes\n  ];\n\n  return (\n    <button type={type} className={elClasses.join(' ')} onClick={handler}>\n      {text}\n    </button>\n  );\n};\n","import { Link } from 'react-router-dom';\n\nexport const EmptyState = (): JSX.Element => {\n  const editorLink = (\n    <Link to='/editor' className='fw-bold text-success text-decoration-none'>\n      <span>editor</span>\n    </Link>\n  );\n\n  return (\n    <div className='col-12 d-flex flex-column align-items-center'>\n      <h4>You currently don't have any snippets</h4>\n      <p>Go to the {editorLink} and create one</p>\n    </div>\n  );\n};\n","import dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport customParseFormat from 'dayjs/plugin/customParseFormat';\n\ninterface Return {\n  formatted: string;\n  relative: string;\n}\n\nexport const dateParser = (date: Date): Return => {\n  dayjs.extend(relativeTime);\n  dayjs.extend(customParseFormat);\n\n  // test date format\n  const regex = /\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.|\\+|-|Z)+/;\n  const dateFormat = regex.test(date.toString())\n    ? 'YYYY-MM-DD[T]HH:mm:ss.SSSZ'\n    : 'YYYY-MM-DD HH:mm:ss.SSS Z';\n\n  // parse date\n  const parsedDate = dayjs(date, dateFormat);\n  const formatted = parsedDate.format('YYYY-MM-DD HH:mm');\n  const relative = parsedDate.fromNow();\n\n  return { formatted, relative };\n};\n","import { Color } from '../typescript/types';\n\nexport const badgeColor = (language: string): Color => {\n  const code = language.toLowerCase().charCodeAt(0);\n  let color: Color = 'primary';\n\n  switch (code % 6) {\n    case 0:\n    default:\n      color = 'primary';\n      break;\n    case 1:\n      color = 'success';\n      break;\n    case 2:\n      color = 'info';\n      break;\n    case 3:\n      color = 'warning';\n      break;\n    case 4:\n      color = 'danger';\n      break;\n    case 5:\n      color = 'light';\n      break;\n  }\n\n  return color;\n};\n","import { aliases } from '../data/aliases_raw.json';\n\nexport const findLanguage = (language: string): boolean => {\n  const search = language.toLowerCase();\n  return aliases.some(alias => alias === search);\n};\n","import { SearchQuery } from '../typescript/interfaces';\n\nexport const searchParser = (rawQuery: string): SearchQuery => {\n  // Extract filters from query\n  const tags = extractFilters(rawQuery, 'tags');\n  const languages = extractFilters(rawQuery, 'lang');\n  const query = rawQuery.replaceAll(/(tags|lang):[a-zA-Z]+(,[a-zA-Z]+)*/g, '');\n\n  return {\n    query: query.trim(),\n    tags,\n    languages\n  };\n};\n\nconst extractFilters = (query: string, filter: string): string[] => {\n  let filters: string[] = [];\n\n  const regex = new RegExp(filter + ':[a-zA-Z]+(,[a-zA-Z]+)*');\n  const matcher = query.match(regex);\n\n  if (matcher) {\n    filters = matcher[0].split(':')[1].split(',');\n  }\n\n  return filters;\n};\n","import { useContext } from 'react';\nimport { SnippetsContext } from '../../store';\nimport Icon from '@mdi/react';\nimport { mdiPin, mdiPinOutline } from '@mdi/js';\n\ninterface Props {\n  id: number;\n  isPinned: boolean;\n}\n\nexport const SnippetPin = (props: Props): JSX.Element => {\n  const { toggleSnippetPin } = useContext(SnippetsContext);\n  const { id, isPinned } = props;\n\n  return (\n    <div onClick={() => toggleSnippetPin(id)} className='cursor-pointer'>\n      {isPinned ? (\n        <Icon path={mdiPin} size={0.8} color='#20c997' />\n      ) : (\n        <Icon path={mdiPinOutline} size={0.8} color='#ced4da' />\n      )}\n    </div>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport { useContext } from 'react';\nimport { Snippet } from '../../typescript/interfaces';\nimport { dateParser, badgeColor } from '../../utils';\nimport { Badge, Button, Card } from '../UI';\nimport { SnippetsContext } from '../../store';\nimport copy from 'clipboard-copy';\nimport { SnippetPin } from './SnippetPin';\n\ninterface Props {\n  snippet: Snippet;\n}\n\nexport const SnippetCard = (props: Props): JSX.Element => {\n  const { title, description, language, code, id, createdAt, isPinned } =\n    props.snippet;\n  const { setSnippet } = useContext(SnippetsContext);\n\n  const copyHandler = () => {\n    copy(code);\n  };\n\n  return (\n    <Card classes='h-100' bodyClasses='d-flex flex-column'>\n      {/* TITLE */}\n      <h5 className='card-title d-flex align-items-center justify-content-between'>\n        {title}\n        <SnippetPin id={id} isPinned={isPinned} />\n      </h5>\n\n      <h6 className='card-subtitle mb-2 text-muted'>\n        {/* LANGUAGE */}\n        <Badge text={language} color={badgeColor(language)} />\n      </h6>\n\n      {/* DESCRIPTION */}\n      <p>{description ? description : 'No description'}</p>\n\n      <div className='mt-auto'>\n        {/* UPDATE DATE */}\n        <p>Created {dateParser(createdAt).relative}</p>\n        <hr />\n\n        {/* ACTIONS */}\n        <div className='d-flex justify-content-end'>\n          <Link\n            to={{\n              pathname: `/snippet/${id}`,\n              state: { from: window.location.pathname }\n            }}\n          >\n            <Button\n              text='View'\n              color='secondary'\n              small\n              outline\n              classes='me-2'\n              handler={() => {\n                setSnippet(id);\n              }}\n            />\n          </Link>\n          <Button\n            text='Copy code'\n            color='secondary'\n            small\n            handler={copyHandler}\n          />\n        </div>\n      </div>\n    </Card>\n  );\n};\n","import { Snippet } from '../../typescript/interfaces';\nimport { SnippetCard } from './SnippetCard';\n\ninterface Props {\n  snippets: Snippet[];\n}\n\nexport const SnippetGrid = (props: Props): JSX.Element => {\n  const { snippets } = props;\n\n  return (\n    <div className='row row-cols-1 row-cols-md-2 row-cols-xl-3 g-4'>\n      {snippets.map(snippet => (\n        <div className='col' key={snippet.id}>\n          <SnippetCard snippet={snippet} />\n        </div>\n      ))}\n    </div>\n  );\n};\n","import { useRef, useEffect, KeyboardEvent, useContext } from 'react';\nimport { SnippetsContext } from '../store';\nimport { searchParser } from '../utils';\n\nexport const SearchBar = (): JSX.Element => {\n  const { searchSnippets } = useContext(SnippetsContext);\n  const inputRef = useRef<HTMLInputElement>(document.createElement('input'));\n\n  useEffect(() => {\n    inputRef.current.focus();\n  }, [inputRef]);\n\n  const inputHandler = (e: KeyboardEvent<HTMLInputElement>) => {\n    const query = searchParser(inputRef.current.value);\n\n    if (e.key === 'Enter') {\n      searchSnippets(query);\n    } else if (e.key === 'Escape') {\n      inputRef.current.value = '';\n      searchSnippets(searchParser(inputRef.current.value));\n    }\n  };\n\n  return (\n    <div className='mb-3'>\n      <input\n        type='text'\n        className='form-control'\n        placeholder='card lang:typescript tags:ui,react'\n        ref={inputRef}\n        onKeyUp={e => inputHandler(e)}\n      />\n      <div className='form-text text-gray ms-1'>\n        Search by pressing `Enter`. Clear with `Esc`. Read more about available\n        filters{' '}\n        <a\n          href='https://github.com/pawelmalak/snippet-box/wiki/Search-filters'\n          target='_blank'\n          rel='noreferrer'\n          className='text-success text-decoration-none'\n        >\n          here\n        </a>\n      </div>\n    </div>\n  );\n};\n","import { useEffect, useContext, Fragment } from 'react';\nimport { SnippetsContext } from '../store';\nimport { Layout, PageHeader, EmptyState } from '../components/UI';\nimport { SnippetGrid } from '../components/Snippets/SnippetGrid';\nimport { SearchBar } from '../components/SearchBar';\n\nexport const Home = (): JSX.Element => {\n  const { snippets, getSnippets, searchResults } = useContext(SnippetsContext);\n\n  useEffect(() => {\n    getSnippets();\n  }, []);\n\n  return (\n    <Layout>\n      {snippets.length === 0 ? (\n        <EmptyState />\n      ) : (\n        <Fragment>\n          <PageHeader title='Search' />\n          <SearchBar />\n          <div className='col-12 mb-4'>\n            <SnippetGrid snippets={searchResults} />\n          </div>\n\n          {snippets.some(s => s.isPinned) && (\n            <Fragment>\n              <PageHeader title='Pinned snippets' />\n              <div className='col-12 mt-3'>\n                <SnippetGrid snippets={snippets.filter(s => s.isPinned)} />\n              </div>\n            </Fragment>\n          )}\n        </Fragment>\n      )}\n    </Layout>\n  );\n};\n","import { useEffect } from 'react';\nimport { findLanguage } from '../../utils';\nimport hljs from 'highlight.js';\nimport 'highlight.js/styles/atom-one-dark.css';\n\ninterface Props {\n  code: string;\n  language: string;\n}\n\nexport const SnippetCode = (props: Props): JSX.Element => {\n  const { code, language } = props;\n\n  const syntax = findLanguage(language) ? language : 'plaintext';\n\n  useEffect(() => {\n    hljs.highlightAll();\n  }, []);\n\n  return (\n    <pre>\n      <code\n        className={`language-${syntax.toLowerCase()}`}\n        style={{ whiteSpace: 'pre-wrap', borderRadius: '4px' }}\n      >\n        {code}\n      </code>\n    </pre>\n  );\n};\n","import { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { SnippetsContext } from '../../store';\nimport { Snippet } from '../../typescript/interfaces';\nimport { dateParser } from '../../utils';\nimport { Badge, Button, Card } from '../UI';\nimport copy from 'clipboard-copy';\nimport { SnippetPin } from './SnippetPin';\n\ninterface Props {\n  snippet: Snippet;\n}\n\nexport const SnippetDetails = (props: Props): JSX.Element => {\n  const {\n    title,\n    language,\n    tags,\n    createdAt,\n    updatedAt,\n    description,\n    code,\n    id,\n    isPinned\n  } = props.snippet;\n\n  const history = useHistory();\n\n  const { deleteSnippet, setSnippet } = useContext(SnippetsContext);\n\n  const creationDate = dateParser(createdAt);\n  const updateDate = dateParser(updatedAt);\n\n  // const copyHandler = () => {\n  //   copy(code);\n  // };\n\n  return (\n    <Card>\n      <h5 className='card-title d-flex align-items-center justify-content-between'>\n        {title}\n        <SnippetPin id={id} isPinned={isPinned} />\n      </h5>\n      <p>{description}</p>\n\n      {/* LANGUAGE */}\n      <div className={`d-flex justify-content-between`}>\n        <span>Language</span>\n        <span className='fw-bold'>{language}</span>\n      </div>\n\n      {/* CREATED AT */}\n      <div className={`d-flex justify-content-between`}>\n        <span>Created</span>\n        <span>{creationDate.relative}</span>\n      </div>\n\n      {/* UPDATED AT */}\n      <div className={`d-flex justify-content-between`}>\n        <span>Last updated</span>\n        <span>{updateDate.relative}</span>\n      </div>\n      <hr />\n\n      {/* TAGS */}\n      <div>\n        {tags.map((tag, idx) => (\n          <span className='me-2' key={idx}>\n            <Badge text={tag} color='light' />\n          </span>\n        ))}\n      </div>\n      <hr />\n\n      {/* ACTIONS */}\n      <div className='d-grid g-2' style={{ rowGap: '10px' }}>\n        <Button\n          text='Delete'\n          color='danger'\n          small\n          outline\n          handler={() => deleteSnippet(id)}\n        />\n\n        <Button\n          text='Edit'\n          color='secondary'\n          small\n          outline\n          handler={() => {\n            setSnippet(id);\n            history.push({\n              pathname: `/editor/${id}`,\n              state: { from: window.location.pathname }\n            });\n          }}\n        />\n\n        <Button\n          text='Copy raw url'\n          color='secondary'\n          small\n          outline\n          handler={() => {\n            const { protocol, host } = window.location;\n            const rawUrl = `${protocol}//${host}/api/snippets/raw/${id}`;\n            copy(rawUrl);\n          }}\n        />\n\n        <Button\n          text='Copy code'\n          color='secondary'\n          small\n          handler={() => copy(code)}\n        />\n      </div>\n    </Card>\n  );\n};\n","import ReactMarkdown from 'react-markdown';\n\ninterface Props {\n  markdown: string;\n}\n\nexport const SnippetDocs = (props: Props): JSX.Element => {\n  return (\n    <div>\n      <ReactMarkdown>{props.markdown}</ReactMarkdown>\n    </div>\n  );\n};\n","import { Fragment, useContext, useEffect } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { SnippetCode } from '../components/Snippets/SnippetCode';\nimport { Layout, PageHeader, Card } from '../components/UI';\nimport { SnippetsContext } from '../store';\nimport { SnippetDetails } from '../components/Snippets/SnippetDetails';\nimport { SnippetDocs } from '../components/Snippets/SnippetDocs';\n\ninterface Params {\n  id: string;\n}\n\nexport const Snippet = (): JSX.Element => {\n  const { currentSnippet, getSnippetById } = useContext(SnippetsContext);\n  const { id } = useParams<Params>();\n\n  // Get previous location\n  const location = useLocation<{ from: string }>();\n  const { from } = location.state || '/snippets';\n\n  useEffect(() => {\n    getSnippetById(+id);\n  }, []);\n\n  return (\n    <Layout>\n      {!currentSnippet ? (\n        <div className='col-12'>Loading...</div>\n      ) : (\n        <Fragment>\n          <PageHeader title='' prevDest={from} />\n          <div className='col-12 col-md-7 col-lg-8 mt-3'>\n            <SnippetCode\n              code={currentSnippet.code}\n              language={currentSnippet.language}\n            />\n          </div>\n          <div className='col-12 col-md-5 col-lg-4 mt-md-3'>\n            <SnippetDetails snippet={currentSnippet} />\n          </div>\n          {currentSnippet.docs && (\n            <div className='col-12'>\n              <Card title='Snippet documentation'>\n                <hr />\n                <SnippetDocs markdown={currentSnippet.docs} />\n              </Card>\n            </div>\n          )}\n        </Fragment>\n      )}\n    </Layout>\n  );\n};\n","import { useEffect, useContext, useState, Fragment } from 'react';\nimport { SnippetsContext } from '../store';\nimport { SnippetGrid } from '../components/Snippets/SnippetGrid';\nimport { Button, Card, EmptyState, Layout } from '../components/UI';\nimport { Snippet } from '../typescript/interfaces';\n\nexport const Snippets = (): JSX.Element => {\n  const { snippets, tagCount, getSnippets, countTags } =\n    useContext(SnippetsContext);\n\n  const [filter, setFilter] = useState<string | null>(null);\n  const [localSnippets, setLocalSnippets] = useState<Snippet[]>([]);\n\n  useEffect(() => {\n    getSnippets();\n    countTags();\n  }, []);\n\n  useEffect(() => {\n    setLocalSnippets([...snippets]);\n  }, [snippets]);\n\n  const filterHandler = (tag: string) => {\n    setFilter(tag);\n    const filteredSnippets = snippets.filter(s => s.tags.includes(tag));\n    setLocalSnippets(filteredSnippets);\n  };\n\n  const clearFilterHandler = () => {\n    setFilter(null);\n    setLocalSnippets([...snippets]);\n  };\n\n  return (\n    <Layout>\n      {snippets.length === 0 ? (\n        <EmptyState />\n      ) : (\n        <Fragment>\n          <div className='col-12 col-md-4 col-lg-3'>\n            <Card>\n              <h5 className='card-title'>All snippets</h5>\n              <div className='mb-3 d-flex justify-content-between'>\n                <span>Total</span>\n                <span>{snippets.length}</span>\n              </div>\n              <hr />\n\n              <h5 className='card-title'>Filter by tags</h5>\n              <Fragment>\n                {tagCount.map((tag, idx) => {\n                  const isActiveFilter = filter === tag.name;\n\n                  return (\n                    <div\n                      key={idx}\n                      className={`d-flex justify-content-between cursor-pointer ${\n                        isActiveFilter && 'text-success'\n                      }`}\n                      onClick={() => filterHandler(tag.name)}\n                    >\n                      <span>{tag.name}</span>\n                      <span>{tag.count}</span>\n                    </div>\n                  );\n                })}\n              </Fragment>\n              <div className='d-grid mt-3'>\n                <Button\n                  text='Clear filters'\n                  color='secondary'\n                  small\n                  outline\n                  handler={clearFilterHandler}\n                />\n              </div>\n            </Card>\n          </div>\n          <div className='col-12 col-md-8 col-lg-9'>\n            <SnippetGrid snippets={localSnippets} />\n          </div>\n        </Fragment>\n      )}\n    </Layout>\n  );\n};\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Button, Badge } from '../UI';\r\n\r\ninterface AutoTaggerProps {\r\n  code: string;\r\n  language: string;\r\n  currentTags: string[];\r\n  onTagsGenerated: (tags: string[]) => void;\r\n}\r\n\r\ninterface TagResponse {\r\n  tags: string[];\r\n  success: boolean;\r\n  error?: string;\r\n}\r\n\r\nconst AutoTagger: React.FC<AutoTaggerProps> = ({ \r\n  code, \r\n  language, \r\n  currentTags, \r\n  onTagsGenerated \r\n}) => {\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [suggestedTags, setSuggestedTags] = useState<string[]>([]);\r\n  const [error, setError] = useState<string>('');\r\n\r\n  const generateTags = async () => {\r\n    setLoading(true);\r\n    setError('');\r\n\r\n    try {\r\n      const response = await axios.post<TagResponse>('/api/ai/generate-tags', {\r\n        code,\r\n        language\r\n      });\r\n\r\n      if (response.data.success) {\r\n        const newTags = response.data.tags.filter(tag => \r\n          !currentTags.includes(tag.toLowerCase())\r\n        );\r\n        setSuggestedTags(newTags);\r\n      } else {\r\n        setError(response.data.error || 'Failed to generate tags');\r\n      }\r\n    } catch (err: any) {\r\n      setError(err.response?.data?.error || 'Failed to connect to AI service');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const addTag = (tag: string) => {\r\n    const updatedTags = [...currentTags, tag];\r\n    onTagsGenerated(updatedTags);\r\n    setSuggestedTags(suggestedTags.filter(t => t !== tag));\r\n  };\r\n\r\n  const addAllTags = () => {\r\n    const updatedTags = [...currentTags, ...suggestedTags];\r\n    onTagsGenerated(updatedTags);\r\n    setSuggestedTags([]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"auto-tagger\">\r\n      <div className=\"d-flex align-items-center mb-2\">\r\n        <label className=\"form-label mb-0\">🏷️ Smart Tags</label>\r\n        <Button\r\n          text={loading ? 'Generating...' : 'Generate AI Tags'}\r\n          color=\"success\"\r\n          small={true}\r\n          outline={true}\r\n          handler={generateTags}\r\n          classes=\"ms-2\"\r\n        />\r\n      </div>\r\n\r\n      {error && (\r\n        <div className=\"alert alert-warning alert-sm mb-2\">\r\n          <small>{error}</small>\r\n        </div>\r\n      )}\r\n\r\n      {suggestedTags.length > 0 && (\r\n        <div className=\"suggested-tags p-2 bg-light rounded border\">\r\n          <div className=\"d-flex align-items-center justify-content-between mb-2\">\r\n            <small className=\"text-muted\">AI Suggested Tags:</small>\r\n            <Button\r\n              text=\"Add All\"\r\n              color=\"success\"\r\n              small={true}\r\n              handler={addAllTags}\r\n            />\r\n          </div>\r\n          <div className=\"d-flex flex-wrap gap-1\">\r\n            {suggestedTags.map((tag, index) => (\r\n              <span\r\n                key={index}\r\n                className=\"badge bg-primary cursor-pointer me-1 mb-1\"\r\n                onClick={() => addTag(tag)}\r\n                title={`Click to add \"${tag}\" to your tags`}\r\n                style={{ cursor: 'pointer' }}\r\n              >\r\n                {tag} <span className=\"ms-1\">+</span>\r\n              </span>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {currentTags.length > 0 && (\r\n        <div className=\"current-tags mt-2\">\r\n          <small className=\"text-muted d-block mb-1\">Current Tags:</small>\r\n          <div className=\"d-flex flex-wrap gap-1\">\r\n            {currentTags.map((tag, index) => (\r\n              <Badge key={index} text={tag} color=\"primary\" />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AutoTagger;\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Button } from '../UI';\r\n\r\ninterface AIExplainerProps {\r\n  code: string;\r\n  language: string;\r\n  aiExplanation?: string;\r\n}\r\n\r\ninterface AIResponse {\r\n  explanation: string;\r\n  success: boolean;\r\n  error?: string;\r\n}\r\n\r\nconst AIExplainer: React.FC<AIExplainerProps> = ({ code, language, aiExplanation }) => {\r\n  const [explanation, setExplanation] = useState<string>(aiExplanation || '');\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [error, setError] = useState<string>('');\r\n\r\n  const explainCode = async () => {\r\n    setLoading(true);\r\n    setError('');\r\n\r\n    try {\r\n      const response = await axios.post<AIResponse>('/api/ai/explain', {\r\n        code,\r\n        language\r\n      });\r\n\r\n      if (response.data.success) {\r\n        setExplanation(response.data.explanation);\r\n      } else {\r\n        setError(response.data.error || 'Failed to generate explanation');\r\n      }\r\n    } catch (err: any) {\r\n      setError(err.response?.data?.error || 'Failed to connect to AI service');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"ai-explainer\">\r\n      <div className=\"d-flex align-items-center mb-2\">\r\n        <h6 className=\"mb-0\">🤖 AI Code Explanation</h6>\r\n        <Button\r\n          text={loading ? 'Analyzing...' : (explanation ? 'Refresh Explanation' : 'Explain Code')}\r\n          color=\"primary\"\r\n          outline={true}\r\n          small={true}\r\n          handler={explainCode}\r\n          classes=\"ms-2\"\r\n        />\r\n      </div>\r\n\r\n      {error && (\r\n        <div className=\"alert alert-warning alert-sm\">\r\n          <small>{error}</small>\r\n        </div>\r\n      )}\r\n\r\n      {explanation && (\r\n        <div className=\"ai-explanation p-3 bg-light rounded border\">\r\n          <small className=\"text-muted d-block mb-1\">AI Generated Explanation:</small>\r\n          <p className=\"mb-0\">{explanation}</p>\r\n        </div>\r\n      )}\r\n\r\n      {!explanation && !loading && (\r\n        <div className=\"text-muted\">\r\n          <small>Click \"Explain Code\" to get an AI-powered explanation of this code snippet.</small>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AIExplainer;\r\n","import {\n  ChangeEvent,\n  FormEvent,\n  Fragment,\n  useState,\n  useContext,\n  useEffect\n} from 'react';\nimport { SnippetsContext } from '../../store';\nimport { NewSnippet } from '../../typescript/interfaces';\nimport { Button, Card } from '../UI';\nimport AutoTagger from '../AI/AutoTagger';\nimport AIExplainer from '../AI/AIExplainer';\n\ninterface Props {\n  inEdit?: boolean;\n}\n\nexport const SnippetForm = (props: Props): JSX.Element => {\n  const { inEdit = false } = props;\n  const { createSnippet, currentSnippet, updateSnippet } =\n    useContext(SnippetsContext);\n\n  const [formData, setFormData] = useState<NewSnippet>({\n    title: '',\n    description: '',\n    language: '',\n    code: '',\n    docs: '',\n    isPinned: false,\n    tags: []\n  });\n\n  const [useAI, setUseAI] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (inEdit) {\n      if (currentSnippet) {\n        setFormData({ ...currentSnippet });\n      }\n    }\n  }, [currentSnippet]);\n\n  const inputHandler = (\n    e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const stringToTags = (e: ChangeEvent<HTMLInputElement>) => {\n    const tags = e.target.value.split(',');\n    setFormData({\n      ...formData,\n      tags\n    });\n  };\n\n  const tagsToString = (): string => {\n    return formData.tags.join(',');\n  };\n\n  const formHandler = (e: FormEvent) => {\n    e.preventDefault();\n\n    const submissionData = {\n      ...formData,\n      useAI\n    };\n\n    if (inEdit) {\n      if (currentSnippet) {\n        updateSnippet(submissionData, currentSnippet.id);\n      }\n    } else {\n      createSnippet(submissionData);\n    }\n  };\n\n  return (\n    <Fragment>\n      <div className='col-12 mt-3'>\n        <Card>\n          <form onSubmit={e => formHandler(e)}>\n            {/* DETAILS SECTION */}\n            <h5 className='card-title mb-3'>Snippet details</h5>\n\n            {/* AI FEATURES TOGGLE */}\n            <div className='mb-3'>\n              <div className='form-check'>\n                <input\n                  className='form-check-input'\n                  type='checkbox'\n                  id='useAI'\n                  checked={useAI}\n                  onChange={(e) => setUseAI(e.target.checked)}\n                />\n                <label className='form-check-label' htmlFor='useAI'>\n                  🤖 Enable AI Features (Auto-tagging & Code explanation)\n                </label>\n              </div>\n              <div className='form-text'>\n                AI features require an OpenAI API key to be configured\n              </div>\n            </div>\n\n            {/* TITLE */}\n            <div className='mb-3'>\n              <label htmlFor='title' className='form-label'>\n                Title\n              </label>\n              <input\n                type='text'\n                className='form-control'\n                id='title'\n                name='title'\n                value={formData.title}\n                placeholder='Recursively copy all files'\n                required\n                onChange={e => inputHandler(e)}\n              />\n            </div>\n\n            {/* DESCRIPTION */}\n            <div className='mb-3'>\n              <label htmlFor='description' className='form-label'>\n                Short description\n              </label>\n              <input\n                type='text'\n                className='form-control'\n                id='description'\n                name='description'\n                value={formData.description}\n                placeholder='Bash script to copy all files from src to dest'\n                onChange={e => inputHandler(e)}\n              />\n            </div>\n\n            {/* LANGUAGE */}\n            <div className='mb-3'>\n              <label htmlFor='language' className='form-label'>\n                Language\n              </label>\n              <input\n                type='text'\n                className='form-control'\n                id='language'\n                name='language'\n                value={formData.language}\n                placeholder='python'\n                required\n                onChange={e => inputHandler(e)}\n              />\n            </div>\n\n            {/* TAGS */}\n            <div className='mb-3'>\n              <label htmlFor='tags' className='form-label'>\n                Tags\n              </label>\n              <input\n                type='text'\n                className='form-control'\n                id='tags'\n                name='tags'\n                value={tagsToString()}\n                placeholder='automation, files, loop'\n                onChange={e => stringToTags(e)}\n              />\n              <div className='form-text'>\n                Tags should be separated with a comma. Language tag will be\n                added automatically\n              </div>\n            </div>\n\n            {/* AI AUTO-TAGGER */}\n            {formData.code && formData.language && (\n              <div className='mb-3'>\n                <AutoTagger\n                  code={formData.code}\n                  language={formData.language}\n                  currentTags={formData.tags}\n                  onTagsGenerated={(newTags) => setFormData({...formData, tags: newTags})}\n                />\n              </div>\n            )}\n\n            <hr />\n\n            {/* CODE SECTION */}\n            <h5 className='card-title mb-3'>Snippet code</h5>\n            <div className='mb-3'>\n              <textarea\n                className='form-control'\n                id='code'\n                name='code'\n                rows={10}\n                value={formData.code}\n                placeholder='cp -r ./src ./dest'\n                required\n                onChange={e => inputHandler(e)}\n              ></textarea>\n            </div>\n\n            {/* AI EXPLAINER */}\n            {formData.code && formData.language && (\n              <div className='mb-3'>\n                <AIExplainer\n                  code={formData.code}\n                  language={formData.language}\n                />\n              </div>\n            )}\n\n            <hr />\n\n            {/* DOCS SECTION */}\n            <h5 className='card-title mb-3'>Snippet documentation</h5>\n            <div className='mb-3'>\n              <textarea\n                className='form-control'\n                id='docs'\n                name='docs'\n                rows={10}\n                value={formData.docs}\n                placeholder='`-r` flag stands for `--recursive`'\n                onChange={e => inputHandler(e)}\n              ></textarea>\n            </div>\n\n            {/* SUBMIT SECTION */}\n            <div className='d-grid'>\n              <Button\n                text={`${inEdit ? 'Update snippet' : 'Create snippet'}`}\n                color='secondary'\n                type='submit'\n              />\n            </div>\n          </form>\n        </Card>\n      </div>\n    </Fragment>\n  );\n};\n","import { Fragment, useEffect, useContext, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { SnippetForm } from '../components/Snippets/SnippetForm';\nimport { Layout, PageHeader } from '../components/UI';\nimport { SnippetsContext } from '../store';\n\ninterface Params {\n  id?: string;\n}\n\nexport const Editor = (): JSX.Element => {\n  const { setSnippet: setCurrentSnippet } = useContext(SnippetsContext);\n  const [inEdit, setInEdit] = useState(false);\n\n  // Get previous location\n  const location = useLocation<{ from: string }>();\n  const { from } = location.state || '/snippets';\n\n  // Get id\n  const { id } = useParams<Params>();\n\n  // Set snippet\n  useEffect(() => {\n    if (id) {\n      setCurrentSnippet(+id);\n      setInEdit(true);\n    }\n  }, []);\n\n  return (\n    <Layout>\n      {inEdit ? (\n        <Fragment>\n          <PageHeader<{ from: string }>\n            title='Edit snippet'\n            prevDest={from}\n            prevState={{ from: '/snippets' }}\n          />\n          <SnippetForm inEdit />\n        </Fragment>\n      ) : (\n        <Fragment>\n          <PageHeader title='Add new snippet' />\n          <SnippetForm />\n        </Fragment>\n      )}\n    </Layout>\n  );\n};\n","import { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { Navbar } from './components/Navigation/Navbar';\nimport { Editor, Home, Snippet, Snippets } from './containers';\nimport { SnippetsContextProvider } from './store';\n\nexport const App = () => {\n  return (\n    <BrowserRouter>\n      <SnippetsContextProvider>\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route path='/snippets' component={Snippets} />\n          <Route path='/snippet/:id' component={Snippet} />\n          <Route path='/editor/:id?' component={Editor} />\n        </Switch>\n      </SnippetsContextProvider>\n    </BrowserRouter>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/style.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}